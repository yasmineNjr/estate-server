generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id String  @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  username String @unique
  password String
  avatar String?
  createdAt DateTime @default(now())
  posts Post[]
  savedPosts SavedPost[]
  chats      Chat[]      @relation(fields: [chatIDs], references: [id])
  chatIDs    String[]    @db.ObjectId
}

model Post{
  id String  @id @default(auto()) @map("_id") @db.ObjectId
  title String 
  Price Int
  images String[]
  address String
  city String
  bedroom Int
  bathroom Int
  latitude String
  longitude String
  type Type
  property Property
  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
  postDetail PostDetail?
  savedPosts SavedPost[]

  createdAt DateTime @default(now())
}

enum Type {
  buy
  rent
}

enum Property {
  apartment
  house
  condo
  land
}

model PostDetail{
  id String  @id @default(auto()) @map("_id") @db.ObjectId
  desc String 
  utilities String?
  pet String?
  income String?
  size Int?
  school Int?
  bus Int?
  restaurant Int?
  post Post @relation(fields: [postId], references: [id])
  postId String @db.ObjectId @unique

  createdAt DateTime @default(now())
}

model SavedPost {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
  userId    String   @unique @db.ObjectId
  postId    String   @unique @db.ObjectId
  createdAt DateTime @default(now())

  @@unique([userId, postId])
}

model Chat {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  users     User[]    @relation(fields: [userIDs], references: [id])
  userIDs   String[]  @db.ObjectId
  createdAt DateTime  @default(now())
  seenBy    String[]  @db.ObjectId
  messages  Message[] 
  lastMessage String?
}

model Message {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  text      String
  userId    String
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    String   @db.ObjectId
  createdAt DateTime @default(now())
}